version: 2

references:
  defaults: &defaults
    working_directory: /tmp/caronae
    docker:
      - image: docker:stable-git

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache py-pip
            pip install docker-compose
      - run:
          name: Persist build number
          command: $CIRCLE_WORKING_DIRECTORY/scripts/calcrev.sh > build_number.txt
      - run:
          name: Run tests
          command: $CIRCLE_WORKING_DIRECTORY/scripts/test.sh
      - store_test_results:
          path: /tmp/caronae/reports/phpunit
      - store_artifacts:
          path: /tmp/caronae/reports/phpunit
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  build:
    <<: *defaults
    steps:
      - *restore_repo
      - run:
          name: Docker build
          command: ./scripts/build.sh

  deploy-dev:
    <<: *defaults
    steps:
      - *restore_repo
      - run:
          name: Tag image as develop
          command: ./scripts/tag.sh develop
      - run:
          name: Deploy to dev
          command: |
            ssh -o StrictHostKeyChecking=No -A $CARONAE_DEV_USER@$CARONAE_DEV_HOST -p $CARONAE_DEV_PORT bash -s < scripts/update_images.sh "develop"

  deploy-prod:
    <<: *defaults
    steps:
      - *restore_repo
      - run:
          name: Tag image as latest
          command: ./scripts/tag.sh latest
      - run:
          name: Deploy to prod
          command: |
            ssh -o StrictHostKeyChecking=No -A $CARONAE_PROD_USER@$CARONAE_PROD_HOST -p $CARONAE_PROD_PORT bash -s < scripts/update_images.sh "latest"

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy-dev:
          requires:
            - build
      - hold_prod:
          type: approval
          requires:
            - deploy-dev
      - deploy-prod:
          requires:
            - hold_prod
